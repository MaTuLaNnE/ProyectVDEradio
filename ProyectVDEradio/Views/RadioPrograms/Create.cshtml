
@model ProyectVDEradio.ViewModels.CreateProgramViewModel
@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="section">
        <h2>Crear Programa de Radio</h2>
        <h4>Nuevo Programa de Radio</h4>
        <div class="form-divider" style="width: auto; max-width: 100%;"></div>

        @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

        @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()

        <div class="form-group has-icon">
            <label class="form-label required">Nombre del Programa</label>
            @Html.TextBoxFor(m => m.ProgramName, new { @class = "form-control", placeholder = "Ingrese el nombre del programa" })
            <span class="input-icon">📻</span>
            @Html.ValidationMessageFor(model => model.ProgramName, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group has-icon">
            <label class="form-label required">Imagen</label>
            @Html.TextBoxFor(m => m.Image, new { @class = "form-control", placeholder = "URL de la imagen del programa" })
            <span class="input-icon">🖼️</span>
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group has-icon">
            <label class="form-label required">Descripción</label>
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Descripción del programa", rows = 4 })
            <span class="input-icon">📝</span>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-row">
            <div class="form-group has-icon">
                <label class="form-label required">Hora de Inicio</label>
                @Html.TextBoxFor(m => m.StartTime, new { @type = "time", @class = "form-control" })
                <span class="input-icon">🕐</span>
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "field-validation-error" })
            </div>
            <div class="form-group has-icon">
                <label class="form-label required">Hora de Fin</label>
                @Html.TextBoxFor(m => m.EndTime, new { @type = "time", @class = "form-control" })
                <span class="input-icon">🕐</span>
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "field-validation-error" })
            </div>
        </div>

        <div class="form-group">
            <label class="form-label required">Días de Emisión</label>
            <div class="checkbox-group">
                @{
                        string[] dias = { "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" };
                        for (int i = 0; i < 7; i++)
                        {
                    <div class="checkbox-item">
                        <label class="checkbox-label">
                            <input type="checkbox" name="SelectedDays" value="@i" class="checkbox-input" />
                            @dias[i]
                        </label>
                    </div>
                        }
                }
            </div>
            @Html.ValidationMessageFor(model => model.SelectedDays, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            <label class="form-label required">Conductores</label>
            <div class="checkbox-group">
                @foreach (var host in Model.HostsDisponibles)
                    {
                <div class="checkbox-item">
                    <label class="checkbox-label">
                        <input type="checkbox" name="SelectedHostIds" value="@host.Value" class="checkbox-input" />
                        @host.Text
                    </label>
                </div>
                    }
            </div>
            @Html.ValidationMessageFor(model => model.SelectedHostIds, "", new { @class = "field-validation-error" })
        </div>

        <div class="btn-container">
            <input type="submit" value="Crear Programa" class="btn btn-primary" />
            <input type="reset" value="Limpiar Formulario" class="btn btn-secondary" />
        </div>
        }

        <div class="back-link">
            <a href="@Url.Action("Index", "RadioPrograms")" class="back-link a" style="color:black">
                ← Volver al Panel de Gestión de Programas
            </a>
        </div>
        <div class="back-link">
            <a href="@Url.Action("Index", "Management")" class="crud-btn btn-listar">
                ← Volver al Panel de Gestión
            </a>
        </div>
    </div>
</div>

@*@{
        ViewBag.Title = "Create";
    }

    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Nuevo Programa de Radio</h4>

        @Html.LabelFor(m => m.ProgramName)
        @Html.TextBoxFor(m => m.ProgramName, new { @class = "form-control" })

        @Html.LabelFor(m => m.Image)
        @Html.TextBoxFor(m => m.Image, new { @class = "form-control" })

        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })

        @Html.LabelFor(m => m.StartTime)
        @Html.TextBoxFor(m => m.StartTime, new { @type = "time", @class = "form-control" })

        @Html.LabelFor(m => m.EndTime)
        @Html.TextBoxFor(m => m.EndTime, new { @type = "time", @class = "form-control" })

        <label>Días de Emisión</label>
        @{
            string[] dias = { "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" };
            for (int i = 0; i < 7; i++)
            {
                <div>
                    <label>
                        <input type="checkbox" name="SelectedDays" value="@i" /> @dias[i]
                    </label>
                </div>
            }
        }

        <label>Conductores</label>
        <div>
            @foreach (var host in Model.HostsDisponibles)
            {
                <div class="checkbox">
                    <label>
                        <input type="checkbox" name="SelectedHostIds" value="@host.Value" />
                        @host.Text
                    </label>
                </div>
            }
        </div>

        <br />
        <button type="submit" class="btn btn-success">Guardar Programa</button>
    </div>
    }*@
